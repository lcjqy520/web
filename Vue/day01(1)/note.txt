0、10天基础 + 5天项目
    一周的小程序    
    一周nodejs

1、介绍
    1) 回顾
        1. 底层代码操作         (古代，走路)
            组件、页面布局      重构
            交互               XMLHttpRequest(ajax)
            dom操作            DOM

            // 生成p标签
            var p = document.createElement('p');
            // 向p标签内部添加文本
            var text = document.createTextNode('只是一段文本');
            p.appendChild(text);
            // 追加到id为app的div
            var app = document.getElementById('app');
            app.appendChild(p);

        2. dom驱动框架操作      (自行车)
            组件、页面布局      bootstrap、layui
            交互               jQuery(ajax)
            dom操作            jQuery

            $('#app')

        3. vue企业级框架        (火车、飞机、高铁)
            组件、页面布局      vue-element-admin、element-ui
            交互               axios(ajax)
            dom操作            零DOM操作(或者说很少操作)
        
    2) 什么是vue
        前端三大框架：vue、react、angular
        Vue 的核心库只关注视图层
            mvc(后台主导的开发思想)
            mvvm(vue就是基于这种模式)
                m       model           数据模型    data
                v       view            视图        html
                vm      viewModel       视图控制
        vue特点：
            1. 使用es6语法编程
            2. 几乎零DOM操作
            3. 双向数据绑定
            ...

2、vue基础
    1) 如何使用vue
        1. 引入第三方库(bootCDN、离线包)
        2. npm引用(npm install vue-cli --save)

        会暴露出一个Vue构造函数
    
    2) vue实例对象
        参考案例：2-vue.html
        1. vm代表vue实例对象，vue的实例对象可以通过new Vue()来创建
        2. el:'#app',意思是选中id为app的div容器，绑定模板
        3. vm可以直接获取到data中的数据
    
    3) 声明式渲染
        Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统
        1. 输出一个变量
            {{msg}}
        2. 输出js表达式
            {{num += 1}}
            {{msg.split('').reverse().join('')}}

    4) 列表渲染
        1. 遍历数组 (参考3-vFor.html)
            只获取每一项
            <ul v-for="item in list" v-bind:key="item.id">
                <li>{{item.name}}</li>
            </ul>

            获取每一项和它对应的索引
            <ul v-for="(item,index) in list" v-bind:key="item.id">
                <li>{{index}}----{{item.name}}</li>
            </ul>

            v-for
                含义：是一个指令，用于列表渲染
                语法：v-for="(item,index) in arr"
                    item是被遍历的数组的每一项
                    index是被遍历的数组的每一项对应得索引，可选
                    arr是一个数组
                注意：
                    可以用 of 替代 in 作为分隔符，因为它更接近 JavaScript 迭代器的语法
            
            key
                含义：为每一项元素提供一个标识
                取值：字符串或者数值
                    不要使用对象、数组
                作用：为了给 Vue 一个提示，以便它能跟踪每个节点的身份，从而重用和重新排序现有元素

                两个div，需要替换位置：
                    加key
                        vue会直接替换两个div的位置，重新排序元素
                    不加key
                        vue会直接替换两个div的文本内容，不会移动DOM(效率高)

        2. 遍历对象
            <ul v-for="(value,key,index) in obj">
                <li>{{key}}---{{value}}---{{index}}</li>
            </ul>

            key表示键名
            value表示键值
            key表示索引
        
        3. 遍历数字(整数)
            <ul v-for="n in 5">
                {{n}}
            </ul>
            
        4. 数据的更新
            








